2014-07-16 (Take Your Poet to Work Day) lttng-ust 2.5.0
	* Mutex while updating statedump_pending is not needed
	* Revert "Turn base address dump into experimental feature"
	* Fix: document ust_fork_mutex nesting
	* Bugfix for #745 deadlock with baddr statedump+fork
	* Move enablers syncing after the channel registration
	* Add lttng_ust_notrace to static inline functions
	* lttng ust: support ppc64le within configure

2014-06-27 lttng-ust 2.5.0-rc2
	* Fix: lttng-ust-jul: set thread in daemon mode
	* JUL: use root logger to capture events
	* Fix: Wrong configure check for UST perf event counters context support
	* Fix: multiple providers in same C file failure
	* Fix: header inclusion guard typo in lttng-ust-tracef-provider.h
	* Fix: 2.5.0-rc1 changelog has off-by-one date

2014-05-28 (International Hamburger Day) lttng-ust 2.5.0-rc1
	* Fix: out of tree build for lib Java and JUL
	* Fix: default loglevel is DEBUG
	* Fix: refuse overwrite mode buffers with less than two subbuffers
	* Fix: tracef.h: add missing c++ guard
	* Fix: remove JUL loglevel filtering from the agent
	* Fix: cleanup JUL agent state on sessiond disconnect
	* Fix: Move generated headers to the BUILT_SOURCES target
	* Fix: perf ust: check close return value
	* Cleanup: work-around missing inet.h struct mmsghdr fwd declaration
	* Implement LTTng-UST perf counters support on x86
	* Fix linking failure when cross-compiling
	* Fix: disable liblttng-ust-dl if dlinfo is not available in C library
	* Fix: pass proper args when writing commit counter
	* Fix: pad strings that are modified concurrently with tracing
	* Fix: Use $AM_CC when it is defined instead of gcc in demo-tracef
	* Revert "Fix: disable liblttng-ust-dl if dlinfo is not available in C library"
	* Fix: .split() the CC environment variable in lttng-gen-tp
	* Fix: disable liblttng-ust-dl if dlinfo is not available in C library
	* Fix: python invocation through env
	* Change default loglevel to TRACE_DEBUG_LINE
	* Fix: Override AM_PATH_PYTHON's default action-if-not-found
	* Fix: don't accept configure --disable-shared
	* Fix: configure.ac: add missing result to alignment req. check
	* Fix: malloc wrapper: infinite recursion with compat TLS
	* Fix: lttng-ust needs -ldl for tracef()
	* Fix: typo in lttng-ust.3
	* Fix: liblttng-ust-libc-wrapper recursive use of calloc
	* Fix: add demo-tracef to dist tarball
	* Fix: add missing header files for tracef
	* Implement tracef() instrumentation API
	* Add 'unused' attribute to tracepoint callback
	* Use autoconf AM_MAINTAINER_MODE
	* Fix: mismatch between code and comments
	* Fix: incorrect urcu git URL in README

2014-02-28 (Public Sleeping Day) lttng-ust 2.4.0
	* Fix: JUL test: update to API change
	* Fix: Cast from pointer to different integer size warning
	* Turn base address dump into experimental feature
	* Fix: JUL support multiple loglevels
	* Fix: Skip lttng-gen-tp example build if Python is missing
	* Fix: dynamically fetch the session daemon port
	* Fix: JUL agent connect to user and root sessiond
	* Fix: handle registration done command
	* Fix: Unsynchronized access in LTTngTCPSessiondClient
	* Cleanup: fix comment
	* Fix: Dump executable base-address with readlink
	* Fix: add assert for NULL dereference
	* Fix: tracepoint out of memory handling
	* Fix: dereference before null check
	* Cleanup: remove logically dead code
	* Fix: handle sysconf errors
	* Fix: java-jul/Makefile should not be marked as a binary

2014-02-14 lttng-ust 2.4.0-rc4
	* Cleanup: remove extra space in dlerror wrapper
	* Fix: work-around glibc lying about dlsym()/dlerror() leafness
	* Cleanup: add lttng_ust_malloc_wrapper_init prototype to header
	* Fix: malloc libc instrumentation wrapper
	* Fix: add LTTngEvent class to fix delayed logger
	* Fix: FD leak in liblttng-ust-ctl
	* Fix: liblttng-ust-dl Makefile flags mismatch
	* Fix: liblttng-ust-fork Makefile flags mismatch
	* Fix: out of tree examples build
	* Fix: C++: incomplete extern C guard transition

2014-01-29 lttng-ust 2.4.0-rc3
	* Fix: add missing JUL loglevel handling
	* Cleanup gen-tp: add quotes around AM_CC
	* Pass the CC variable to the example Makefiles
	* cleanup ust_baddr and ust_baddr_statedump doc
	* baddr: add ust_baddr and ust_baddr_statedump doc
	* Fix: baddr_statedump tracepoint registration
	* Fix: baddr out of tree build

2013-12-10 lttng-ust 2.4.0-rc2
	* Fix: baddr_statedump tracepoint registration
	* Fix: baddr deadlocks and RCU races
	* Fix: lock exit mutex when creating threads
	* Fix: baddr deadlock with lttng-ust destructor
	* baddr: include missing header
	* baddr: get session under lock
	* Fix: take the ust lock around session iteration in statedump
	* Fix: baddr_statedump deadlock with JUL tracing
	* Fix: client_packet_header() uses wrong packet
	* Cleanup: fix typo in ring buffer backend comment
	* Compile liblttng-ust-baddr c files into liblttng-ust
	* Allow suppressing of base-address-state tracing
	* Integrate base-address statedump into lttng-ust
	* Fix: eliminate timestamp overlap between packets
	* Fix: lttng-gen-tp to build out of tree
	* Fix: compile doc/ after JUL/Java
	* JUL: add Hello.java in doc/examples
	* Fix lttng-ust(3) manpage
	* JUL: fix enable all event for delayed Logger
	* Fix: typo in JNICALL for the JUL tracepoint
	* Fix: move va_end to outermost label
	* Fix: add missing NULL check after allocation
	* Fix cleanup: all spaces before flags
	* fix: lttng-gen-tp: add missing spaces around flags

2013-11-15 lttng-ust 2.4.0-rc1
	* doc/examples: error out when a subdir make fails
	* JUL: fix out of tree build
	* Java/jul: fix make dist
	* JUL: install documentation and jar file
	* Add missing copyrights to test scripts
	* Escape minus signs in lttng-ust-cyg-profile manpage
	* Fix spelling mistake in lttng-ust manpage
	* Fix tests/benchmark
	* Implement base-address-state tracing
	* Base-address tracing for dlopen and dlclose
	* Add a check against excluders
	* Add handler for LTTNG_UST_EXCLUSION in UST ABI
	* Store exclusions to enablers
	* Add excluders to enabler structure
	* Send exclusion data through ustcomm
	* Define exclusion structure for UST ABI
	* Define a new command LTTNG_UST_EXCLUSION
	* Fix: package of LTTngUst.h was renamed without renaming target in makefile
	* Fix: check for java .class in package subfolders
	* Fix: java library to use user define JDK at compile time
	* Add liblttng-ust-jul for JUL support
	* Fix: application SIGBUS when starting in parallel with sessiond
	* Fix: Minor corrections to the lttng-ust man page
	* Documentation cleanup: Overhaul of the lttng-gen-tp man page
	* Warning cleanup: add missing padding initializer
	* Fix: socket connect hang on heavy loads
	* Cleanup: fix typo
	* Fix: ust-comm recvmsg should handle partial receive
	* gcc warning fix: -Wextra
	* Add usage reference count for tracepoints
	* tracepoint.c: Move add_callsite/remove_callsite further down in file
	* Store the callsites into the library callsite list
	* Fix linking warning
	* Per-stream ioctl to get the current timestamp
	* LTTng ringbuffer ABI calls for index generation
	* Specialize lttng_ust_lib_ring_buffer_client_cb
	* Add tracing instrumentation for pthread mutex lock functions

2013-09-03 lttng-ust 2.3.0
	* No change

2013-08-30 lttng-ust 2.3.0-rc2
	* doc/examples/gen-tp: pass automake CPPFLAGS/CFLAGS/LDFLAGS
	* tools/lttng-gen-tp: honor CPPFLAGS and LDFLAGS
	* Fix: doc/examples cross-build
	* Fix: liblttng_ust.la should depend on liblttng-ust-tracepoint.la
	* Introduce configure --with-lttng-system-rundir
	* examples: tracepoint probes don't need extern C
	* Tracepoint probes don't need extern C
	* Add trace support for memalign and posix_memalign
	* malloc instrumentation: remove dependency on pthread
	* Add trace support for calloc and realloc.
	* Fix: allow make check to run in VPATH build
	* Update .gitignore
	* Update obsolete benchmark test
	* Cleanup tests (2nd commit)
	* Cleanup tests
	* Fix: doc/examples VPATH build

2013-07-17 lttng-ust 2.3.0-rc1
	* Fix: Unchecked asprintf/vasprintf return values
	* Missing NULL pointer init in tap.c
	* Disable doc/examples build
	* Add python3 support to lttng-gen-tp
	* Bump ABI major to 5
	* callsite: add "ip" context
	* Allow environment variable LTTNG_HOME to override HOME
	* Fix: libs order in Makefile
	* Fix: ring buffer: get_subbuf() checks should be performed on "consumed" parameter
	* Introduce ustctl_write_one_packet_to_channel
	* build: Fix out-of-tree build
	* Fix: SWITCH_FLUSH new sub-buffer checks
	* Fix: ring buffer: handle concurrent update in nested buffer wrap around check
	* Cleanup: lib_ring_buffer_switch_new_end() only calls subbuffer_set_data_size()
	* Fix: doc/examples: gen-tp path
	* Revert "Cleanup: ring buffer: remove lib_ring_buffer_switch_new_end()"
	* Fix: handle writes of length 0
	* Cleanup: ring buffer: remove lib_ring_buffer_switch_new_end()
	* Fix: lttng-events VPATH build
	* Allow #include in template (.tp) file
	* tests/hello.cxx: rename tp.cpp into tp-cpp.cpp
	* doc/examples: build gen-tp example by default
	* doc/examples: support BSD make
	* Tracepoint.h: replace assertion by fprintf and abort()
	* Remove unused assert.h from bitfield.h
	* Clarify probe registration documentation/errors
	* Fix: Check C++ designated initializers support before compiling 'hello.cxx' test
	* Add mising include in ust.h
	* lttng-gen-tp: Fix include guard name with file using non valid characters
	* Fix: segfault when print invalid command
	* Fix: Add --no-as-needed to the demo example's Makefile
	* zmalloc: attribute always_inline
	* Fix: liblttng-ust process startup hang when sessiond is stopped
	* Move include directive from CFLAGS to LOCAL_CPPFLAGS in examples' Makefiles
	* Allow tracepoint providers to be compiled with g++
	* Add parameter -f to rm in Makefile clean target
	* Fix: missing dependency for liblttng-ust-tracepoint.so
	* Remove 0.x TODO
	* Add warning about default prefix and library paths to README
	* Revert "Revert "Fix (another) linker library order""
	* Revert "Revert "Fix linker library order""
	* snprintf: play nice with static checker
	* tracepoint.c: Add coverity alloc/free annotations
	* Fix: "fields" leak on register
	* Fix: memory leak for events without fields
	* Fix: memory leak on connection reset
	* Revert "Fix linker library order"
	* Revert "Fix (another) linker library order"
	* Fix: incorrect support for multi-context
	* Fix (another) linker library order
	* Fix typo in run script
	* Fix linker library order
	* Fix examples: add missing CPPFLAGS
	* example Makefiles: standardize on $^ for linking
	* Fix demo example Makefile
	* Move "hello-static-lib" to doc/examples and add non-automake Makefiles

2013-05-09 lttng-ust 2.2.0-rc2
	* manpage: Document probe provider compatibility
	* Fix: add provider ABI compatibility check
	* Cleanup: ignore mktemp return value
	* Cleanup: documentation: argument vs field
	* Documentation: document undefined behavior for NULL pointers
	* Cleanup: silence cppcheck error
	* Fix: add internal mutex for timer
	* 32-bit warning fix for cyg profile fast
	* Fix warnings for 32-bit in lttng-ust-cyg-profile
	* Typo fix in README
	* Fix: tracepoint.h incorrect assumption about constructor order
	* Cleanup: comment mismatch with code
	* Fix: ABI breakage between 2.1 and 2.2-rc1
	* Documentation: document that sequence len field is unsigned
	* connect: don't report EACCES
	* connect: don't print error on EPERM
	* Bump liblttng-ust-ctl lib version major number
	* Optimisation: implement callsite hash table in tracepoint.c
	* Optimisation: only update added library in tracepoint.c
	* Optimisation: only fix pending events once per lazy update

2013-03-28 lttng-ust 2.2.0-rc1
	* Fix: tracepoint instrumentation constructor order issue
	* Documentation: update 2.0 to 2.x
	* Add demo test back as an example
	* Don't rely on explicit context for filtering
	* Implement per-context filtering
	* Fix: filter string comparison should check for literal
	* update tests/demo readme file
	* Add man page for lttng-ust-cyg-profile
	* Fix: filter string wildcard comparison
	* Fix: Remove test runner script
	* Fix: forwarding of call_site argument to field
	* Add demo README
	* Tests: Use Perl prove as the testsuite runner
	* Remove tests depending on consumerd
	* Convert hello.cxx test to a build test
	* Clean-up of configure.ac and tests/Makefile.am
	* Fix snprintf test and output result to TAP format
	* Replace same_line_marker test with same_line_tracepoint
	* Remove tests-libustinstr-malloc
	* Remove exit-fast test
	* Remove fork test
	* Remove daemon test
	* Remove demo test
	* Remove outdated test-nevents test
	* Remove outdated simple_include test
	* Remove outdated register_test test
	* Convert hello-static-lib test to a build test
	* Convert hello test to a build test only
	* Remove outdated libustctl_function_tests test
	* Remove outdated test hello2
	* Remove outdated dlopen test
	* Remove outdated test basic long
	* Remove outdated test basic
	* cyg_profile: implement fast and verbose .so
	* Performance: add unlikely to tracepoint dynamic linking test
	* Fix: _LGPL_SOURCE rcu dereference fix
	* Implement liblttng-ust-cyg-profile function entry/exit instrumentation
	* Minor fix: libc wrapper internal run script
	* Fix: ustctl_recv_register_event pointer mixup
	* Fix: allow enabling same events for two channels
	* Add channel ID field to attr
	* Remove useless else clause
	* tracepoint: move "probe" test outside of loop
	* Fix uninitialized has_loglevel variable
	* Fix clang warnings
	* Cleanup: work-around clang unused result warning
	* Cleanup compile warning
	* Cleanup: remove unused variables
	* tracepoint: Don't add NULL probes
	* Remove mention of locking issues associated with dlopen usage
	* Implement read timer (for RT)
	* Only flush when there are readers active
	* Add mutex for channel wakeup fd update
	* Fix: fields should be initialized to NULL
	* Implement ustctl_duplicate_ust_object_data
	* Add channel wakeup fd to monitor close
	* Fix: refcount issue in lttng-ust-abi.c
	* Fix: only consumerd should print errors
	* Implement ring buffer periodic buffer switch timer
	* Fix: ensure all probe providers have their symbols
	* Reactivate error printing
	* Unregister tracepoint probes when not needed
	* Cleanup: remove now unused metadata code from UST
	* Fix: notification timeout logic
	* Fix: don't print error in comm proto connect on ENOENT
	* Fix: return expected error return values for sessiond
	* Fix: set wait/wake fd to -1 before close
	* Fix: Only notify socket should have timeout/nonblock
	* Fix: ustctl: return -EPIPE to sessiond if connection is closed
	* Fix: Add timeout on notification socket
	* Remove now unused metadata printf code
	* Move metadata creation into lttng-sessiond and lttng-consumed
	* Add write metadata API to ust-ctl.h
	* Move UST registry into sessiond and implement notifiers
	* Fix: don't flush-final for offset 0 if reader is on sub-buffer
	* Use tp rcu link test in provider
	* Remove direct dependency of probes on urcu-bp
	* Use urcu tls-compat.h
	* Lazy provider registration
	* Always use lttng_get_probe_list_head to get probe list
	* Fix static build
	* Move LTTng-UST buffer ownership from application to consumer
	* Fix package: don't distribute generated headers
	* Fix: don't cancel already exited threads
	* Scalability fix: tracepoint.c hash table size increase
	* Scalability fix for many events: event hash table size
	* Speed up probe registration for large amount of events
	* Add missing demo-trace shell script to dist tarball
	* Documentation: add uuid package name for Fedora in README
	* Fix: missing test for lttng_ust_comm_should_quit in lttng-ust-comm.c
	* Add compilation support for Tile architectures
	* Documentation: clarify debian package name for uuid in README
	* Fix: comment in ust-ctl.h
	* Fix I/O-related error values in ustctl
	* Introduce hash table for lttng_create_event_if_missing()
	* Fix: don't build C++ example if a C++ compiler isn't available
	* Remove LIBFORMAT output in configure.
	* Document dependency on libuuid

2012-12-20 (13th Baktun) lttng-ust 2.1.0
	* Bump liblttng-ust-ctl lib version major number
	* Bump UST proto version minor number
	* Helper to debug: add object name
	* Tests: Fix rundir not created in ust-basic-tracing
	* ust test: add missing return -1
	* Test: update ust tracing unit tests to 2.1 internal ABI
	* Tests: Fix rundir not created in ust-multi-test
	* Adapt internal files and examples to TRACEPOINT_INCLUDE
	* Adapt tests to TRACEPOINT_INCLUDE
	* Cleanup: tests remove hello.cxx/ust_tests_demo.h
	* Fix: don't do macro expansion in tracepoint file name
	* Fix lttng-gen-tp: Template file must end in .tp
	* Pack structures in comm protocol between UST and sessiond
	* Cleanup lttng-gen-tp: Help not showing when using -h,--help
	* Cleanup lttng-gen-tp: remove leading underscore before include guard
	* fix memleak: ustctl free shadow chan on ustctl_unmap_channel()
	* Update license text
	* Fix: check if event enabled for bytecode-less events
	* Fix: handle enablers without bytecode
	* Print probe provider mismatch error even without -Wsystem-headers
	* filter: Add missing padding

2012-11-22 lttng-ust 2.1.0-rc2
	* filter interpreter cleanup: use uint64_t for retval
	* Fix: filter linking can dereference NULL pointer on alloc failure
	* Cleanup: remove whitespaces and EOL in tests
	* Filter: use only single lower bit of filter return value
	* Fix: filter: var len array at end of external structure
	* Fix: filter link fail handling
	* Fix: add missing seqnum field to filter
	* filters: perform union rather than intersection
	* Implement support for overlapping wildcard/events
	* Cleanup: add lttng_/lttng-/LTTNG_ prefixes
	* filter: add seqnum field to filter command
	* Filter iteration: iterate on list of filters
	* document that tracepoint names should ideally not be re-used
	* Remove LIBFORMAT config declaration, unused
	* Add libc errno translation layer to UST error code
	* Fix: add const qualifier for filter local void *
	* Fix: re-allow non-lvalue string, sequence, array parameters
	* Tear down handles associated with a closed sessiond socket
	* Distinguish UST return codes from transport return codes
	* Fix: Conditionally disable tests requiring shared libs support
	* Cleanup: don't spawn per-user thread if HOME is not set
	* Manpage: document supported UST contexts
	* Fix: procname context semantic
	* Fix: Fix self-assign warning on struct ustfork_clone_info init
	* Fix: memcpy of string is larger than source
	* Implement liblttng-ust-fork daemon() override test
	* liblttng-ust-fork: override daemon() call
	* ustfork: set errno to ENOSYS if symbol lookup fails
	* Fix: be quiet on filter linker error
	* Build out of src tree
	* Fix: filter bytecode specializer stack leak
	* Fix: reloc offset validation error out on filters with no reloc table
	* Perform calculation on bit size in 64-bit
	* Use uint64_t for packet header content size and packet size
	* Fix: manpage typo "-lllttng-ust" -> "-llttng-ust"
	* Fix: BSD getprogname null pointer dereference
	* Add support for model.emf.uri event info
	* Filter error message cleanup
	* Manpage update: document use in daemons
	* Fix: get_wait_shm() ust mutex deadlock (add 2 missing exit calls)
	* Fix: get_wait_shm() ust mutex deadlock
	* Fix: add events with 0 field to field list

2012-09-10 lttng-ust 2.1.0-rc1
	* Fix make dist: fix liblttng-ust-java dependencies
	* Fix make dist: add missing filter header
	* Fix: backward compatibility with UST 2.0 app probes
	* Fix: Filter ABI changes to support FILTER_BYTECODE_MAX_LEN (65536)
	* Export "written" information about fields
	* Fix filter: pointer to string, not string, should be on stack
	* Fix: tracepoint float nowrite
	* Fix: accept 65536 bytes long bytecodes
	* Add hostname to env
	* ABI change: bump internal version to 3.0.0
	* Fix: threads should be created in DETACHED state
	* Fix: 32-bit x86 strict-aliasing warnings
	* Fix UST SIGPIPE handling
	* Fix: Libtool fails to find dependent libraries when cross-compiling lttng-ust
	* Cleanup: filter: turn bytecode linking error msg into debug
	* Make lttng-ust robust against -finstrument-functions.
	* Filter: keep aliased ax and bx registers
	* Filter: remove interpreter dynamic typing
	* Filter: add missing specialized op names
	* Filter: specialize double-s64 binary comparators
	* Fix filter: fix stack leak on taken branch
	* Filter: Implement stack-based interpreter
	* Filter: double comparator produces s64
	* Filter: use hash table to check merge points
	* Filter: split passes into separate components
	* Filter: cleanup macros
	* Filter: validate range overflow with end of insn
	* Filter: validate that field ref strings are non-NULL
	* Filter: ensure logical operator merge is always s64
	* Filter: we don't care if double/s64 are literals
	* Filter: specialize 'and' and 'or' ops.
	* Implement dispatch-table based interpretor
	* Filter: Specialize unary operators
	* Define switch use as macro in interpreter
	* Filter interpreter: mark float test as unlikely
	* Filter: fix bytecode validation typo
	* Filter: specialize comparators
	* Specialize load and unary ops
	* Validate registers, no need to initialize to 0
	* Filter: opcode for ref loads
	* Remove redundant validation from interpreter
	* filter: Add bytecode validation pass
	* TRACEPOINT_EVENT: add *_nowrite fields for filter
	* Only print filter errors if LTTNG_UST_DEBUG is set
	* Cleanup: remove debug define
	* Filter: add floating point support
	* Remove filter test printouts
	* Implement filter bytecode interpreter and linker
	* Filter: receive, attach and link empty filter
	* Filter: prepare filter stack data
	* Wrap dynamic len array into stackvar union
	* liblttng-ust-comm/lttng-ust-com.c: remove unnecessary goto in ustcomm_accept_unix_sock()
	* liblttng-ust/lttng-ust-comm.c: fixing typo.
	* Fix: remove unused texinfo dep from configure.ac
	* Fix C99 strict compatibility: don't use void * for function pointers
	* Fix c99 compatibility: tp_rcu_dereference_bp() should not use braced-groups within expressions
	* Revert "Fix c99 compatibility: tp_rcu_dereference_bp() should not use braced-groups within expressions"
	* Fix c99 compatibility: tp_rcu_dereference_bp() should not use braced-groups within expressions
	* Fix: perform TLS fixup of nest count outside of UST mutex
	* Fix: liblttng-ust-fork deadlock
	* Fix: handle pthread errors
	* Fix: local apps allowed should disable local (not global) tracing
	* Fix strict ISO-C compatibility for ust-tracepoint-event.h public header
	* Fix: support -std=c99 in tracepoint macros
	* Fix c99 compatibility: use __typeof__ instead of typeof in public headers
	* hello test: fail on old style definition
	* Fix: tracepoint.h should not generate old-style definitions
	* Fix: don't define variables in headers
	* test "hello": add boolean test
	* Fix: perform macro expansion on tracepoint signatures
	* UST check pointer/de-reference order
	* Fix list field: handle error
	* Implement event fields listing
	* Implement field listing command
	* Fix: Block all signals in listener thread
	* Add CodingStyle document to tarball
	* Add coding style document
	* endian.h: support cygwin
	* align.h: support cygwin page size
	* Add cygwin support to libringbuffer getcpu.h
	* Add "2x int" and "2x long" types to the Java interface
	* Add Integer and Long tracepoint types to the Java interface
	* Fix: don't SIGBUS when filesystem is full
	* tracepoint: include stdio.h for NULL definition
	* manpage update: document that probes need gcc
	* Fix: remove # in front on extern "C" {
	* Cleanup: don't use GNU old-style field designator extension
	* Fix: remove padding field after variable sized array
	* Use unsigned long type for events discarded counter
	* Fix: getcpu build with modern uClibc versions
	* Fix: lttng-ust.pc needs to specify -ldl
	* Fix: examples Makefiles should pass $(LIBS) at last
	* Build a jar for the Java side of the JNI interface
	* Fix: ustctl need to send the second fd upon error of 1st fd
	* Fix: Add missing fork test program dependency library
	* Fix: Make the JNI interface actually work
	* Merge branch 'dev'
	* Fix: stringify version description

2012-03-29 lttng-ust 2.0.1
	* Use bsd-compatible fcntl for close-on-exec on socket
	* Fix multi-session wildcard support
	* Fix event lost count when buffer is full
	* Remove inappropriate \n from easy-ust sample

2012-03-20 lttng-ust 2.0.0
	* First STABLE version
	* Add version name

2012-03-20 lttng-ust 2.0.0-rc4
	* Fix out-of-bound write in ltt-events.c
	* Document LTTNG_UST_DEBUG_VALGRIND compilation flag
	* Update COPYING
	* Add exception handling to lttng-gen-tp io operations

2012-03-16 lttng-ust 2.0.0-rc3
	* Fix: sendmsg should retry on EINTR, and use MSG_NOSIGNAL
	* fix: ustcomm_close_unix_sock should close, not shutdown
	* Fix: do not print EPIPE perror, as it is an expected error
	* Ensure that multiplication of clock offset is done on 64-bit
	* Add 2 missing licenses in deprecated tests
	* Remove unbuild and unused (deprecated) make_shared_lib test
	* License text standardization, add missing licenses
	* Cleanup: remove duplicate check for 0 num_subbuf and subbuf_size
	* Fix: power of 2 size check should apply to size_t type, not uint32_t
	* Fix: recvmsg should handle EINTR
	* Make lttng-gen-tp work on python 2.6
	* Make lttng-gen-tp executable

2012-03-02 lttng-ust 2.0.0-rc2
	* Manpage fixes
	* Fix: dmesg printout should not print metadata warnings
	* Fix: use transport name as channel name
	* Fix: Add signature check in tracepoint activation
	* Fix: add tracepoint signature at tracepoint definition site
	* Fix: keep event probe signature, for use by event probe signature check
	* Fix ABI: add padding to structures shared between UST and consumer
	* Fix ABI: add padding to tracepoint and ring buffer config public structu
	* Fix ABI: Adding missing padding in tracepoint event structures
	* Fix: Add include/lttng/ust-config.h to git ignore
	* Fix effect: update README about dlopen()
	* Fix: fixup vtid TLS
	* Fix: fixup ringbuffer tls at constructor by forcing read
	* Fix: fix deadlock with dlopen() lttng-ust
	* Fix: only print event errors every 1048576 hits
	* Fix: add missing debug printout to identify the cause of lost events
	* fix: liblttng-ust-ctl should check for incorrect parameters
	* fix: ust comm error handling segfault
	* Fix: Return -EINVAL instead of print warning if non power of 2 size/num_
	* fix: on exit, leave thread/mmap reclaim to OS
	* fix: Handle sys_futex with async cancel, add missing pthread_join
	* fix: Only munmap the wait page when not exiting from process
	* Use CPPFLAGS instead of CFLAGS for -I
	* Fix type range comparison always false for 64-bit arch
	* demo: remove useless libs
	* tests: include missing headers
	* Add missing limits.h include for NAME_MAX

2012-02-20 lttng-ust 2.0.0-rc1
	* Standardize version across toolchain
	* Fix a typo in gen-tp Makefile
	* Implement the .o file generation in lttng-gen-tp

2012-02-16 lttng-ust 1.9.8
	* Fix comment in tracepoint.h
	* Add loglevel info to manpage
	* Remove stale binary file
	* Add lttng-ust(3)
	* Add a man page for lttng-gen-tp
	* Install easy-ust and gen-tp examples in doc/
	* Create the lttng-gen-tp tools as an helper to generate UST .h and .c files
	* Add missing #define _GNU_SOURCE for sched_getcpu()
	* Define _GNU_SOURCE for all implementation files rather than getcpu.h
	* Add sched_getcpu and sysconf to AC_CHECK_FUNCS
	* Mark lib_ring_buffer_print_errors unused
	* Cleanup: remove extra space from easy_ust example
	* Add missing comma to tracepoint STAP_PROBEV call

2012-02-13 lttng-ust 1.9.7
	* liblttng-ust-java: add missing -classpath ./
	* Only specify that sdt.h provides system integration for now
	* Add STAP_PROBEV check ton configure.ac
	* Add sdt.h integration
	* Remove extern C around probe header
	* Move lttng/config.h to lttng/ust-config.h, and use LTTNG_UST_ namespace
	* Add a configure report at the end of the output
	* Add sdt.h integration option
	* Set default loglevel in metadata
	* Fix: LTTng-UST java jni wrapper does not build with OpenJDK

2012-02-09 lttng-ust 1.9.6
	* Fix tracepoint.h multiple .o within module/core exec linkage bug
	* tracepoint: name -> _name to fix possible namespace clash
	* Add debug printout to tracepoint.c
	* Rename liblttng-ust-libc to liblttng-ust-libc-wrapper
	* Update hardcoded loglevel
	* Add "easy_ust" example
	* Update gitignore
	* Zero-initialize struct msghdr
	* Add environment information
	* Fix event-specific enabling
	* Update static lib linking
	* liblttng-ust-libc: fix linking
	* liblttng-ust-libc: fix lib dependency
	* Install README and ChangeLog into system doc
	* Add hello-static-lib test
	* Fix static provider linking: introduce TRACEPOINT_PROBE_DYNAMIC_LINKAGE
	* Fix 32-bit type: allocated len is used
	* Fix 32-bit type mismatch

2012-02-02 lttng-ust 1.9.5
	* UST comm ABI: Add padding, push version to 2.0
	* Update loglevel names
	* Implement loglevels as event and wildcard attributes
	* Update loglevel ABI: only loglevel value/enum is known by UST
	* Pre-assign fixed loglevels
	* Remove old (now unused) loglevel control code entirely
	* Update loglevel selection ABI
	* Use boot_id as monotonic clock uuid
	* clock: add clock description to metadata
	* Properly fix the timekeeping overflow detection
	* Revert "Fix timestamps for slow-paced event rates"
	* Revert "Force 64-bit timestamps"
	* Declare struct lttng_ust_calibrate
	* Force 64-bit timestamps
	* demo program: ensure we don't link demo on useless libs
	* ust comm: Receive second FD even if 1st receive failed
	* ust consumer: close shm fd after mapping it
	* Add a comment about which wait fd is closed early by UST.
	* Remove leftover structure in ust-abi.h
	* Close stream and channel file descriptors as soon as passed to
	  sessiond
	* Fix AC_LANG_SOURCE usage: only takes one parameter
	* Fix timestamps for slow-paced event rates
	* configure.ac: Use AC_LANG_SOURCE for if else macros
	* Add execution instructions to the demo test program
	* Force the building of shared noinst libraries in the demo test
	  program.
	* Only print the futex perror in debug mode

2011-12-23 lttng-ust 1.9.4
	* Split liblttng-ust into liblttng-ust and liblttng-ust-tracepoint libs
	* Comment the union field (only used in call_rcu scheme)

2011-12-21 lttng-ust 1.9.3
	* Fix clock source overflow on 32-bit archs
	* Remove unused trace_clock_frequency
	* check for negative wait() return value
	* Add DBG message when registering a probe
	* Only show futex warning "perror" in debug mode

2011-12-14 lttng-ust 1.9.2
	* Add missing ust_libc.h to Makefile.am
	* Use DBG instead of WARN for futex_wake workaround message
	* Make dlopen more robust by using the .0 target for the library

2011-12-13 lttng-ust 1.9.1
	* First LTTng-UST 2.0 prerelease.
